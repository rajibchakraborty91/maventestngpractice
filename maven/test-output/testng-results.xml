<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="37065" started-at="2019-06-26T03:31:20Z" finished-at="2019-06-26T03:31:57Z">
    <groups>
      <group name="regre">
        <method signature="DemoTestng.test1(java.lang.String)[pri:1, instance:pages.DemoTestng@6ce139a4]" name="test1" class="pages.DemoTestng"/>
        <method signature="DemoTestng.test2(java.lang.String)[pri:2, instance:pages.DemoTestng@6ce139a4]" name="test2" class="pages.DemoTestng"/>
        <method signature="DemoTestng.test3(java.lang.String)[pri:0, instance:pages.DemoTestng@6ce139a4]" name="test3" class="pages.DemoTestng"/>
        <method signature="DemoTestng.test4(java.lang.String, java.lang.String)[pri:-1, instance:pages.DemoTestng@6ce139a4]" name="test4" class="pages.DemoTestng"/>
      </group> <!-- regre -->
      <group name="abc">
        <method signature="DemoTestng.test4(java.lang.String, java.lang.String)[pri:-1, instance:pages.DemoTestng@6ce139a4]" name="test4" class="pages.DemoTestng"/>
      </group> <!-- abc -->
    </groups>
    <test name="Test" duration-ms="37065" started-at="2019-06-26T03:31:20Z" finished-at="2019-06-26T03:31:57Z">
      <class name="pages.DemoTestng">
        <test-method status="PASS" signature="startme()[pri:0, instance:pages.DemoTestng@6ce139a4]" name="startme" is-config="true" duration-ms="5906" started-at="2019-06-26T09:01:14Z" finished-at="2019-06-26T09:01:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startme -->
        <test-method status="PASS" signature="setupdriver()[pri:0, instance:pages.DemoTestng@6ce139a4]" name="setupdriver" is-config="true" duration-ms="2" started-at="2019-06-26T09:01:20Z" finished-at="2019-06-26T09:01:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupdriver -->
        <test-method status="PASS" signature="startmethod()[pri:0, instance:pages.DemoTestng@6ce139a4]" name="startmethod" is-config="true" duration-ms="267" started-at="2019-06-26T09:01:20Z" finished-at="2019-06-26T09:01:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startmethod -->
        <test-method status="FAIL" signature="test4(java.lang.String, java.lang.String)[pri:-1, instance:pages.DemoTestng@6ce139a4]" name="test4" duration-ms="4843" started-at="2019-06-26T09:01:21Z" data-provider="testing" finished-at="2019-06-26T09:01:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rajib]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chakraborty]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at pages.DemoTestng.test4(DemoTestng.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="takescreenshot(org.testng.ITestResult)[pri:0, instance:pages.DemoTestng@6ce139a4]" name="takescreenshot" is-config="true" duration-ms="1750" started-at="2019-06-26T09:01:26Z" finished-at="2019-06-26T09:01:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4 status=FAILURE method=DemoTestng.test4(java.lang.String, java.lang.String)[pri:-1, instance:pages.DemoTestng@6ce139a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshot -->
        <test-method status="PASS" signature="startmethod()[pri:0, instance:pages.DemoTestng@6ce139a4]" name="startmethod" is-config="true" duration-ms="54" started-at="2019-06-26T09:01:28Z" finished-at="2019-06-26T09:01:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startmethod -->
        <test-method status="PASS" signature="test3(java.lang.String)[pri:0, instance:pages.DemoTestng@6ce139a4]" name="test3" duration-ms="14537" started-at="2019-06-26T09:01:28Z" finished-at="2019-06-26T09:01:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rajib]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at pages.DemoTestng.test3(DemoTestng.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="takescreenshot(org.testng.ITestResult)[pri:0, instance:pages.DemoTestng@6ce139a4]" name="takescreenshot" is-config="true" duration-ms="186" started-at="2019-06-26T09:01:43Z" finished-at="2019-06-26T09:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SUCCESS method=DemoTestng.test3(java.lang.String)[pri:0, instance:pages.DemoTestng@6ce139a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshot -->
        <test-method status="PASS" signature="startmethod()[pri:0, instance:pages.DemoTestng@6ce139a4]" name="startmethod" is-config="true" duration-ms="227" started-at="2019-06-26T09:01:43Z" finished-at="2019-06-26T09:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startmethod -->
        <test-method status="PASS" signature="test1(java.lang.String)[pri:1, instance:pages.DemoTestng@6ce139a4]" name="test1" duration-ms="7436" started-at="2019-06-26T09:01:43Z" description="Invalid Login Scenario with wrong username and password" finished-at="2019-06-26T09:01:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="takescreenshot(org.testng.ITestResult)[pri:0, instance:pages.DemoTestng@6ce139a4]" name="takescreenshot" is-config="true" duration-ms="78" started-at="2019-06-26T09:01:51Z" finished-at="2019-06-26T09:01:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=DemoTestng.test1(java.lang.String)[pri:1, instance:pages.DemoTestng@6ce139a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshot -->
        <test-method status="PASS" signature="startmethod()[pri:0, instance:pages.DemoTestng@6ce139a4]" name="startmethod" is-config="true" duration-ms="10" started-at="2019-06-26T09:01:51Z" finished-at="2019-06-26T09:01:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startmethod -->
        <test-method status="PASS" signature="test2(java.lang.String)[pri:2, instance:pages.DemoTestng@6ce139a4]" name="test2" duration-ms="6216" started-at="2019-06-26T09:01:51Z" finished-at="2019-06-26T09:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dell]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="takescreenshot(org.testng.ITestResult)[pri:0, instance:pages.DemoTestng@6ce139a4]" name="takescreenshot" is-config="true" duration-ms="33" started-at="2019-06-26T09:01:57Z" finished-at="2019-06-26T09:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=DemoTestng.test2(java.lang.String)[pri:2, instance:pages.DemoTestng@6ce139a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshot -->
        <test-method status="PASS" signature="Finishme()[pri:0, instance:pages.DemoTestng@6ce139a4]" name="Finishme" is-config="true" duration-ms="1030" started-at="2019-06-26T09:01:59Z" finished-at="2019-06-26T09:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Finishme -->
      </class> <!-- pages.DemoTestng -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
